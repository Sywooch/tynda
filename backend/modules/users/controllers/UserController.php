<?php

namespace app\modules\users\controllers;

use common\models\users\Query;
use Yii;
use common\models\users\User;
use common\models\users\UserSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use linslin\yii2\curl\Curl;
/**
 * UserController implements the CRUD actions for User model.
 */
class UserController extends Controller
{
    /**
     * URL of API methods.
     */
    const URL_API = 'https://geocode-maps.yandex.ru/1.x/?format=json&geocode=';

    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['post'],
                ],
            ],
        ];
    }

    /**
     * Lists all User models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new UserSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single User model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new User model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new User();
        $post = Yii::$app->request->post();
        if ($model->load($post)) {
            $newPass = $model->setNewPassword($post['User']['password']);
            $model->generateAuthKey();
            if($newPass && $model->save()){
                Yii::$app->session->setFlash('success', 'Новый пользователь успешно создан.');
            }else{
                Yii::$app->session->setFlash('danger', 'Что то пошло не так! Пользователь не создан.');
            }
            return $this->redirect(['index']);
        } else {
            return $this->render('create', [
                'model' => $model,
            ]);
        }
    }

    public function __call($name, $params)
    {
        return parent::__call($name, $params); // TODO: Change the autogenerated stub
    }

    /**
     * Updates an existing User model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        $post = Yii::$app->request->post();
        if ($model->load($post)) {
            $newPass = $model->setNewPassword($post['User']['password']);
            if($newPass && $model->save()){
                Yii::$app->session->setFlash('success', 'Данные о пользователе успешно изменены.');
            }else{
                Yii::$app->session->setFlash('danger', 'Что то пошло не так! Изменить данные не получилось.');
            }
            return $this->redirect(['index']);
        } else {
            return $this->render('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing User model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

	public function actionChangeStatus(){
		$user_id = Yii::$app->request->post('user_id');
		if($user_id) {
			$status = Query::changeStatus($user_id);
			echo $status;
		}
	}

    public function actionGeo(){
        $geo = Yii::$app->request->post('geo');
        print_r($geo);
    }

	public function actionGeoInfo(){
		$lat = Yii::$app->request->post('lat');
        $lon = Yii::$app->request->post('lon');

        $curl = new Curl;
        if ($curl->get(self::URL_API. $lon . ',' . $lat)) {
            $response = json_decode($curl->response, true);
                print_r($response);
            return $response;
        }
	}

    /**
     * Finds the User model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return User the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = User::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
}
